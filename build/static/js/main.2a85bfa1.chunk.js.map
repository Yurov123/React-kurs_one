{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Loader.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","_ref","todo","index","onChange","removeTodo","useContext","classes","completed","push","react_default","a","createElement","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","Todo_TodoItem","key","onToggle","Loader","Modal","state","isOpen","_this2","this","Fragment","setState","Component","AddTodo","lazy","Promise","resolve","setTimeout","__webpack_require__","e","then","App","_React$useState","useState","_React$useState2","Object","slicedToArray","setTodos","_React$useState3","_React$useState4","loading","setLoading","useEffect","fetch","response","json","context","Provider","value","filter","Modal_Modal_Modal","Suspense","fallback","onCreate","concat","Date","now","length","Todo_TodoList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2a85bfa1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n  li: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginBottom: \".5rem\",\r\n  },\r\n  input: {\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n    const {removeTodo} = useContext(Context)\r\n    const classes = []\r\n\r\n    if(todo.completed){\r\n        classes.push('done')\r\n    }\r\n\r\n\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(' ')}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.completed}\r\n          style={styles.input}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <strong>{index + 1}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n\r\n      <button className=\"rm\" onClick={removeTodo.bind(null, todo.id)}>&times;</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={index}\r\n            onChange={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => (\r\n<div style={{display: 'flex', justifyContent: 'center', margin:'.5rem'}}>\r\n    <div  className=\"lds-dual-ring\" />\r\n</div>\r\n) \r\n","import React from 'react';\r\nimport './Modal.css'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true})}>Open Modal</button>\r\n\r\n                {this.state.isOpen && (<div className=\"modal\">\r\n                    <div className='model-body'>\r\n                        <h1>Modal title</h1>\r\n                        <p>I am awesome modal !</p>\r\n                        <button onClick={() => this.setState({ isOpen: true})}>Close model</button>\r\n                    </div>\r\n                </div>)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport Loader from \"./Loader\";\nimport Modal from \"./Modal/Modal\";\n\nconst AddTodo = React.lazy(() => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(import('./Todo/AddTodo'))\n  }, 3000)\n}));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=5\")\n      .then((response) => response.json())\n      .then((todos) => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false);\n        }, 2000);\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>React tutorial</h1>\n\n        <Modal />\n\n        <React.Suspense fallback={<Loader />} >\n          <AddTodo onCreate={addTodo} />\n          </React.Suspense>\n        \n        {loading && <Loader />}\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : loading ? null : (\n          <p>No todos !</p>\n        )}\n      </div>\n    </ Context.Provider >\n    \n  )\n        }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}